Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/ots[0m
    [0;36;107mChecking with ots-sanitize.[0m
    with NotoSansBengaliUI-Thin.ttf

    * [1;30;103mWARN[0m: ots-sanitize passed this file, however warnings were printed:

WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.



    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/whitespace_glyphnames[0m
    [0;36;107mFont has **proper** whitespace glyph names?[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This check enforces adherence to recommended whitespace (codepoints 0020  [0m
    [0;30;107m  and 00A0) glyph names according to the Adobe Glyph List.                  [0m

    * [1;91;107mFAIL[0m: Glyph 0x00A0 is called "uni00A0.beng": Change to "uni00A0" [code: non-compliant-00a0]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/xavgcharwidth[0m
    [0;36;107mCheck if OS/2 xAvgCharWidth is correct.[0m
    with NotoSansBengaliUI-Thin.ttf

    * [0;36;107mINFO[0m: OS/2 xAvgCharWidth is 652 but it should be 654 which corresponds to the average of the widths of all glyphs in the font. These are similar values, which may be a symptom of the slightly different calculation of the xAvgCharWidth value in font editors. There's further discussion on this at https://github.com/googlefonts/fontbakery/issues/1622


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gdef_mark_chars[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Mark characters should be in the GDEF mark glyph class.                   [0m

    * [1;30;103mWARN[0m: The following mark characters could be in the GDEF mark glyph class:
	 U+0982, U+0983, U+09BE, U+09BF, U+09C0, U+09C7, U+09C8, U+09CB, U+09CC, U+09D7, U+1CE1 and U+1CF7 [code: mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_colinear_vectors[0m
    [0;36;107mDo any segments have colinear vectors?[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test looks for consecutive line segments which have the same angle.  [0m
    [0;30;107m  This normally happens if an outline point has been added by accident.     [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is not run for variable fonts, as they may legitimately have    [0m
    [0;30;107m  colinear vectors.                                                         [0m

    * [1;30;103mWARN[0m: The following glyphs have colinear vectors:
	* aabeng: L<<-10.0,622.0>--<848.0,622.0>> -> L<<848.0,622.0>--<848.0,622.0>>
	* llvocalicvowelsignUIbeng: L<<-161.0,-164.0>--<-161.0,-164.0>> -> L<<-161.0,-164.0>--<-161.0,-164.0>>
	* nyacabeng: L<<436.0,676.0>--<441.0,622.0>> -> L<<441.0,622.0>--<441.0,559.0>>
	* rrvocalicbeng: L<<484.0,676.0>--<489.0,622.0>> -> L<<489.0,622.0>--<489.0,318.0>>
	* rrvocalicbeng: L<<677.0,676.0>--<682.0,622.0>> -> L<<682.0,622.0>--<682.0,72.0>>
	* rvocalicbeng: L<<484.0,676.0>--<489.0,622.0>> -> L<<489.0,622.0>--<489.0,318.0>> and rvocalicbeng: L<<677.0,676.0>--<682.0,622.0>> -> L<<682.0,622.0>--<682.0,72.0>> [code: found-colinear-vectors]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_jaggy_segments[0m
    [0;36;107mDo outlines contain any jaggy segments?[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically detects outline segments which form a             [0m
    [0;30;107m  particularly small angle, indicative of an outline error. This may cause  [0m
    [0;30;107m  false positives in cases such as extreme ink traps, so should be regarded [0m
    [0;30;107m  as advisory and backed up by manual inspection.                           [0m

    * [1;30;103mWARN[0m: The following glyphs have jaggy segments:
	* cachababeng: B<<800.5,178.5>-<733.0,122.0>-<612.0,117.0>>/B<<612.0,117.0>-<773.0,95.0>-<942.0,-1.0>> = 10.147294214439293
	* cachabeng: B<<800.5,178.5>-<733.0,122.0>-<612.0,117.0>>/B<<612.0,117.0>-<773.0,95.0>-<942.0,-1.0>> = 10.147294214439293
	* cacharabeng: B<<800.5,178.5>-<733.0,122.0>-<612.0,117.0>>/B<<612.0,117.0>-<773.0,95.0>-<942.0,-1.0>> = 10.147294214439293
	* chababeng: B<<500.5,178.5>-<433.0,122.0>-<312.0,117.0>>/B<<312.0,117.0>-<473.0,95.0>-<642.0,-1.0>> = 10.147294214439293
	* chabeng: B<<500.5,178.5>-<433.0,122.0>-<312.0,117.0>>/B<<312.0,117.0>-<473.0,95.0>-<642.0,-1.0>> = 10.147294214439293
	* chahalfbeng: B<<500.5,178.5>-<433.0,122.0>-<312.0,117.0>>/B<<312.0,117.0>-<473.0,95.0>-<642.0,-1.0>> = 10.147294214439293
	* chanuktabeng: B<<500.5,178.5>-<433.0,122.0>-<312.0,117.0>>/B<<312.0,117.0>-<473.0,95.0>-<642.0,-1.0>> = 10.147294214439293
	* chanuktahalfbeng: B<<500.5,178.5>-<433.0,122.0>-<312.0,117.0>>/B<<312.0,117.0>-<473.0,95.0>-<642.0,-1.0>> = 10.147294214439293
	* charabeng: B<<552.5,178.5>-<485.0,122.0>-<364.0,117.0>>/B<<364.0,117.0>-<525.0,95.0>-<694.0,-1.0>> = 10.147294214439293
	* charasquishbeng: B<<554.0,231.0>-<488.0,182.0>-<367.0,177.0>>/B<<367.0,177.0>-<445.0,167.0>-<525.0,138.0>> = 9.672007524766586 and 50 more. [code: found-jaggy-segments]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_semi_vertical[0m
    [0;36;107mDo outlines contain any semi-vertical or semi-horizontal lines?[0m
    with NotoSansBengaliUI-Thin.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test detects line segments which are nearly, but not quite, exactly  [0m
    [0;30;107m  horizontal or vertical. Sometimes such lines are created by design, but   [0m
    [0;30;107m  often they are indicative of a design error.                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is disabled for italic styles, which often contain              [0m
    [0;30;107m  nearly-upright lines.                                                     [0m

    * [1;30;103mWARN[0m: The following glyphs have semi-vertical/semi-horizontal lines:
	* exclam.beng: L<<167.0,174.0>--<165.0,714.0>> and exclam.beng: L<<193.0,714.0>--<191.0,174.0>> [code: found-semi-vertical]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 2
    [1;30;103mWARN[0m: 5
    [0;36;107mINFO[0m: 3
    [0;34;107mSKIP[0m: 17
    [0;32;107mPASS[0m: 50


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

