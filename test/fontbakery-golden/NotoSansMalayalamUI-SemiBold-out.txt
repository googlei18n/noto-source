Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/ots[0m
    [0;36;107mChecking with ots-sanitize.[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    * [1;30;103mWARN[0m: ots-sanitize passed this file, however warnings were printed:

WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.



    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/whitespace_glyphnames[0m
    [0;36;107mFont has **proper** whitespace glyph names?[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This check enforces adherence to recommended whitespace (codepoints 0020  [0m
    [0;30;107m  and 00A0) glyph names according to the Adobe Glyph List.                  [0m

    * [1;91;107mFAIL[0m: Glyph 0x00A0 is called "uni00A0.mlym": Change to "uni00A0" [code: non-compliant-00a0]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/xavgcharwidth[0m
    [0;36;107mCheck if OS/2 xAvgCharWidth is correct.[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    * [0;36;107mINFO[0m: OS/2 xAvgCharWidth is 992 but it should be 995 which corresponds to the average of the widths of all glyphs in the font. These are similar values, which may be a symptom of the slightly different calculation of the xAvgCharWidth value in font editors. There's further discussion on this at https://github.com/googlefonts/fontbakery/issues/1622


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gdef_mark_chars[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Mark characters should be in the GDEF mark glyph class.                   [0m

    * [1;30;103mWARN[0m: The following mark characters could be in the GDEF mark glyph class:
	 U+0D02, U+0D03, U+0D3E, U+0D3F, U+0D40, U+0D41, U+0D42, U+0D43, U+0D44, U+0D46, U+0D47, U+0D48, U+0D4A, U+0D4B, U+0D4C and U+0D57 [code: mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/gdef_non_mark_chars[0m
    [0;36;107mCheck GDEF mark glyph class doesn't have characters that are not marks)[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Glyphs in the GDEF mark glyph class become non-spacing and may be         [0m
    [0;30;107m  repositioned if they have mark anchors.                                   [0m
    [0;30;107m  Only combining mark glyphs should be in that class. Any non-mark glyph    [0m
    [0;30;107m  must not be in that class, in particular spacing glyphs.                  [0m

    * [1;30;103mWARN[0m: The following non-mark characters should not be in the GDEF mark glyph class:
	 U+0D4E [code: non-mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_alignment_miss[0m
    [0;36;107mAre there any misaligned on-curve points?[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically looks for on-curve points which are close to, but [0m
    [0;30;107m  do not sit on, significant boundary coordinates. For example, a point     [0m
    [0;30;107m  which has a Y-coordinate of 1 or -1 might be a misplaced baseline point.  [0m
    [0;30;107m  As well as the baseline, the test also checks for points near the         [0m
    [0;30;107m  x-height (but only for lower case Latin letters), cap-height, ascender    [0m
    [0;30;107m  and descender Y coordinates.                                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Not all such misaligned curve points are a mistake, and sometimes the     [0m
    [0;30;107m  design may call for points in locations near the boundaries. As this test [0m
    [0;30;107m  is liable to generate significant numbers of false positives, the test    [0m
    [0;30;107m  will pass if there are more than 100 reported misalignments.              [0m

    * [1;30;103mWARN[0m: The following glyphs have on-curve points which have potentially incorrect y coordinates:
	* uni0D00: X=-278.0,Y=713.0 (should be at cap-height 714?)
	* avagrahamlym: X=31.0,Y=-1.0 (should be at baseline 0?)
	* avagrahamlym: X=199.0,Y=712.5 (should be at cap-height 714?)
	* ivowelsignmlym: X=-226.0,Y=715.0 (should be at cap-height 714?)
	* rvocalicvowelsignmlym: X=-101.0,Y=1.0 (should be at baseline 0?)
	* rrvocalicvowelsignmlym: X=-254.0,Y=1.0 (should be at baseline 0?)
	* uni0D4F: X=299.0,Y=1.0 (should be at baseline 0?)
	* yachillumlym: X=879.0,Y=716.0 (should be at cap-height 714?)
	* lvocalicvowelsignmlym: X=-851.5,Y=-0.5 (should be at baseline 0?)
	* yapostmlym: X=-28.0,Y=-1.0 (should be at baseline 0?) and 48 more. [code: found-misalignments]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_jaggy_segments[0m
    [0;36;107mDo outlines contain any jaggy segments?[0m
    with NotoSansMalayalamUI-SemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically detects outline segments which form a             [0m
    [0;30;107m  particularly small angle, indicative of an outline error. This may cause  [0m
    [0;30;107m  false positives in cases such as extreme ink traps, so should be regarded [0m
    [0;30;107m  as advisory and backed up by manual inspection.                           [0m

    * [1;30;103mWARN[0m: The following glyphs have jaggy segments:
	* jajamlym: B<<1263.0,553.0>-<1238.0,551.0>-<1217.0,544.0>>/B<<1217.0,544.0>-<1227.0,545.0>-<1237.0,545.0>> = 12.724355685422335
	* jajamlym: B<<1499.5,207.0>-<1530.0,217.0>-<1559.0,226.0>>/L<<1559.0,226.0>--<1554.0,225.0>> = 5.931526924919784
	* jajamlym: B<<255.0,553.0>-<230.0,551.0>-<208.0,544.0>>/B<<208.0,544.0>-<218.0,545.0>-<229.0,545.0>> = 11.939531082430465
	* jamlym: B<<255.0,553.0>-<230.0,551.0>-<208.0,544.0>>/B<<208.0,544.0>-<218.0,545.0>-<229.0,545.0>> = 11.939531082430465
	* jamlym: B<<491.5,207.0>-<522.0,217.0>-<550.0,226.0>>/L<<550.0,226.0>--<546.0,225.0>> = 3.782645446596307
	* janyamlym: B<<255.0,553.0>-<230.0,551.0>-<208.0,544.0>>/B<<208.0,544.0>-<218.0,545.0>-<229.0,545.0>> = 11.939531082430465
	* japrehalfmlym: B<<255.0,553.0>-<230.0,551.0>-<208.0,544.0>>/B<<208.0,544.0>-<218.0,545.0>-<229.0,545.0>> = 11.939531082430465
	* japrehalfmlym: B<<491.5,207.0>-<522.0,217.0>-<550.0,226.0>>/L<<550.0,226.0>--<546.0,225.0>> = 3.782645446596307
	* nyajamlym: B<<1252.5,207.0>-<1283.0,217.0>-<1312.0,226.0>>/L<<1312.0,226.0>--<1307.0,225.0>> = 5.931526924919784
	* rrarramlym: B<<439.0,125.5>-<475.0,115.0>-<503.0,98.0>>/L<<503.0,98.0>--<442.0,152.0>> = 10.252996836624902 and rrarramlym: L<<276.0,151.0>--<212.0,96.0>>/B<<212.0,96.0>-<240.0,115.0>-<277.0,125.5>> = 6.51524501959204 [code: found-jaggy-segments]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 2
    [1;30;103mWARN[0m: 5
    [0;36;107mINFO[0m: 3
    [0;34;107mSKIP[0m: 17
    [0;32;107mPASS[0m: 50


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

