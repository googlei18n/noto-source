Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/whitespace_glyphnames[0m
    [0;36;107mFont has **proper** whitespace glyph names?[0m
    with NotoNaskhArabic-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This check enforces adherence to recommended whitespace (codepoints 0020  [0m
    [0;30;107m  and 00A0) glyph names according to the Adobe Glyph List.                  [0m

    * [1;30;103mWARN[0m: Glyph 0x0020 is called "uni0020": Change to "space" [code: not-recommended-0020]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoNaskhArabic-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoNaskhArabic-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoNaskhArabic-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gpos_kerning_info[0m
    [0;36;107mDoes GPOS table have kerning information? This check skips monospaced fonts as defined by post.isFixedPitch value[0m
    with NotoNaskhArabic-Bold.ttf

    * [1;30;103mWARN[0m: GPOS table lacks kerning information. [code: lacks-kern-info]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/glyf_nested_components[0m
    [0;36;107mCheck glyphs do not have components which are themselves components.[0m
    with NotoNaskhArabic-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  There have been bugs rendering variable fonts with nested components.     [0m
    [0;30;107m  Additionally, some static fonts with nested components have been reported [0m
    [0;30;107m  to have rendering and printing issues.                                    [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  For more info, see:                                                       [0m
    [0;30;107m  * https://github.com/googlefonts/fontbakery/issues/2961                   [0m
    [0;30;107m  * https://github.com/arrowtype/recursive/issues/412                       [0m

    * [1;91;107mFAIL[0m: The following glyphs have components which themselves are component glyphs:
	* uni0674
	* uni0623
	* uniFE84
	* uniFE84.rlig
	* uni0675
	* uni0675.fina
	* uni0675.fina.rlig
	* uni0628
	* uniFE90
	* uniFE92 and 1052 more. [code: found-nested-components]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/outline_colinear_vectors[0m
    [0;36;107mDo any segments have colinear vectors?[0m
    with NotoNaskhArabic-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test looks for consecutive line segments which have the same angle.  [0m
    [0;30;107m  This normally happens if an outline point has been added by accident.     [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is not run for variable fonts, as they may legitimately have    [0m
    [0;30;107m  colinear vectors.                                                         [0m

    * [1;30;103mWARN[0m: The following glyphs have colinear vectors:
	* _670: L<<449.0,549.0>--<450.0,531.0>> -> L<<450.0,531.0>--<453.0,436.0>>
	* _778: L<<449.0,549.0>--<450.0,531.0>> -> L<<450.0,531.0>--<453.0,436.0>>
	* uni0616: L<<21.0,578.0>--<21.0,612.0>> -> L<<21.0,612.0>--<18.0,684.0>>
	* uni0616: L<<21.0,612.0>--<18.0,684.0>> -> L<<18.0,684.0>--<11.0,781.0>>
	* uni0616: L<<39.0,755.0>--<41.0,687.0>> -> L<<41.0,687.0>--<41.0,666.0>>
	* uni0616: L<<41.0,687.0>--<41.0,666.0>> -> L<<41.0,666.0>--<38.0,581.0>>
	* uni065E: L<<130.0,537.0>--<143.0,555.0>> -> L<<143.0,555.0>--<156.0,571.0>>
	* uni069F.init: L<<0.0,127.0>--<83.0,128.0>> -> L<<83.0,128.0>--<103.0,128.0>>
	* uni06AD: L<<274.0,517.0>--<297.0,540.0>> -> L<<297.0,540.0>--<317.0,561.0>>
	* uni06B6_uni0627: L<<449.0,549.0>--<450.0,531.0>> -> L<<450.0,531.0>--<453.0,436.0>> and 27 more. [code: found-colinear-vectors]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_jaggy_segments[0m
    [0;36;107mDo outlines contain any jaggy segments?[0m
    with NotoNaskhArabic-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically detects outline segments which form a             [0m
    [0;30;107m  particularly small angle, indicative of an outline error. This may cause  [0m
    [0;30;107m  false positives in cases such as extreme ink traps, so should be regarded [0m
    [0;30;107m  as advisory and backed up by manual inspection.                           [0m

    * [1;30;103mWARN[0m: The following glyphs have jaggy segments:
	* _1023: B<<465.0,350.5>-<463.0,373.0>-<462.0,387.0>>/B<<462.0,387.0>-<456.0,333.0>-<452.5,302.0>> = 10.425808525884747
	* _1024: B<<465.0,350.5>-<463.0,373.0>-<462.0,387.0>>/B<<462.0,387.0>-<456.0,333.0>-<452.5,302.0>> = 10.425808525884747
	* _671: B<<466.5,329.5>-<464.0,362.0>-<462.0,387.0>>/L<<462.0,387.0>--<459.0,361.0>> = 11.155865915078854
	* _779: B<<466.5,329.5>-<464.0,362.0>-<462.0,387.0>>/L<<462.0,387.0>--<459.0,361.0>> = 11.155865915078854
	* uni0034.ccmp: B<<111.5,311.5>-<112.0,326.0>-<113.0,341.0>>/B<<113.0,341.0>-<111.0,333.0>-<103.5,316.5>> = 10.222168633636109
	* uni0616: B<<138.5,508.5>-<119.0,506.0>-<87.0,503.0>>/B<<87.0,503.0>-<110.0,504.0>-<105.0,503.5>> = 2.8662721208560136
	* uni0620.fina: B<<590.5,17.0>-<563.0,21.0>-<543.0,26.0>>/B<<543.0,26.0>-<584.0,7.0>-<605.5,-4.0>> = 10.827453103825361
	* uni063D.fina: B<<590.5,17.0>-<563.0,21.0>-<543.0,26.0>>/B<<543.0,26.0>-<584.0,7.0>-<605.5,-4.0>> = 10.827453103825361
	* uni063E.fina: B<<590.5,17.0>-<563.0,21.0>-<543.0,26.0>>/B<<543.0,26.0>-<584.0,7.0>-<605.5,-4.0>> = 10.827453103825361
	* uni063F.fina: B<<590.5,17.0>-<563.0,21.0>-<543.0,26.0>>/B<<543.0,26.0>-<584.0,7.0>-<605.5,-4.0>> = 10.827453103825361 and 183 more. [code: found-jaggy-segments]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 2
    [1;30;103mWARN[0m: 4
    [0;36;107mINFO[0m: 2
    [0;34;107mSKIP[0m: 17
    [0;32;107mPASS[0m: 52


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

