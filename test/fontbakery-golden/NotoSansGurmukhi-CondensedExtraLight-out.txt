Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/ots[0m
    [0;36;107mChecking with ots-sanitize.[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    * [1;30;103mWARN[0m: ots-sanitize passed this file, however warnings were printed:

WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.



    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/whitespace_glyphnames[0m
    [0;36;107mFont has **proper** whitespace glyph names?[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This check enforces adherence to recommended whitespace (codepoints 0020  [0m
    [0;30;107m  and 00A0) glyph names according to the Adobe Glyph List.                  [0m

    * [1;91;107mFAIL[0m: Glyph 0x00A0 is called "uni00A0.guru": Change to "uni00A0" [code: non-compliant-00a0]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/xavgcharwidth[0m
    [0;36;107mCheck if OS/2 xAvgCharWidth is correct.[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    * [0;36;107mINFO[0m: OS/2 xAvgCharWidth is 461 but it should be 459 which corresponds to the average of the widths of all glyphs in the font. These are similar values, which may be a symptom of the slightly different calculation of the xAvgCharWidth value in font editors. There's further discussion on this at https://github.com/googlefonts/fontbakery/issues/1622


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/family_naming_recommendations[0m
    [0;36;107mFont follows the family naming recommendations?[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    * [0;36;107mINFO[0m: Font does not follow some family naming recommendations:

| Field | Value | Recommendation |
|:----- |:----- |:-------------- |
| Family Name | Noto Sans Gurmukhi Condensed ExtraLight | exceeds max length (31) |
 [code: bad-entries]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gdef_mark_chars[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Mark characters should be in the GDEF mark glyph class.                   [0m

    * [1;30;103mWARN[0m: The following mark characters could be in the GDEF mark glyph class:
	 U+0A03, U+0A3E, U+0A3F and U+0A40 [code: mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/gpos_kerning_info[0m
    [0;36;107mDoes GPOS table have kerning information? This check skips monospaced fonts as defined by post.isFixedPitch value[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    * [1;30;103mWARN[0m: GPOS table lacks kerning information. [code: lacks-kern-info]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/glyf_nested_components[0m
    [0;36;107mCheck glyphs do not have components which are themselves components.[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  There have been bugs rendering variable fonts with nested components.     [0m
    [0;30;107m  Additionally, some static fonts with nested components have been reported [0m
    [0;30;107m  to have rendering and printing issues.                                    [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  For more info, see:                                                       [0m
    [0;30;107m  * https://github.com/googlefonts/fontbakery/issues/2961                   [0m
    [0;30;107m  * https://github.com/arrowtype/recursive/issues/412                       [0m

    * [1;91;107mFAIL[0m: The following glyphs have components which themselves are component glyphs:
	* iibindiguru [code: found-nested-components]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/outline_alignment_miss[0m
    [0;36;107mAre there any misaligned on-curve points?[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically looks for on-curve points which are close to, but [0m
    [0;30;107m  do not sit on, significant boundary coordinates. For example, a point     [0m
    [0;30;107m  which has a Y-coordinate of 1 or -1 might be a misplaced baseline point.  [0m
    [0;30;107m  As well as the baseline, the test also checks for points near the         [0m
    [0;30;107m  x-height (but only for lower case Latin letters), cap-height, ascender    [0m
    [0;30;107m  and descender Y coordinates.                                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Not all such misaligned curve points are a mistake, and sometimes the     [0m
    [0;30;107m  design may call for points in locations near the boundaries. As this test [0m
    [0;30;107m  is liable to generate significant numbers of false positives, the test    [0m
    [0;30;107m  will pass if there are more than 100 reported misalignments.              [0m

    * [1;30;103mWARN[0m: The following glyphs have on-curve points which have potentially incorrect y coordinates:
	* ngaguru: X=397.0,Y=2.0 (should be at baseline 0?)
	* rraguru: X=383.0,Y=2.0 (should be at baseline 0?)
	* rraguru: X=138.0,Y=2.0 (should be at baseline 0?)
	* phanuktaguru: X=91.0,Y=2.0 (should be at baseline 0?)
	* oneguru: X=259.5,Y=620.5 (should be at cap-height 622?)
	* ekonkarguru: X=248.5,Y=620.5 (should be at cap-height 622?)
	* uni262C: X=343.0,Y=1.0 (should be at baseline 0?)
	* uni262C: X=258.0,Y=620.5 (should be at cap-height 622?)
	* uni262C: X=692.0,Y=620.5 (should be at cap-height 622?)
	* uni262C: X=607.0,Y=1.0 (should be at baseline 0?) and 29 more. [code: found-misalignments]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_jaggy_segments[0m
    [0;36;107mDo outlines contain any jaggy segments?[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically detects outline segments which form a             [0m
    [0;30;107m  particularly small angle, indicative of an outline error. This may cause  [0m
    [0;30;107m  false positives in cases such as extreme ink traps, so should be regarded [0m
    [0;30;107m  as advisory and backed up by manual inspection.                           [0m

    * [1;30;103mWARN[0m: The following glyphs have jaggy segments:
	* aiaddakguru: B<<391.0,730.5>-<441.0,705.0>-<480.0,633.0>>/B<<480.0,633.0>-<459.0,710.0>-<435.0,759.5>> = 13.187809921305556
	* aimatraaddakguru: B<<-200.0,730.5>-<-150.0,705.0>-<-111.0,633.0>>/B<<-111.0,633.0>-<-132.0,710.0>-<-156.0,759.5>> = 13.187809921305556
	* uaddakaltguru: B<<305.0,853.0>-<399.0,853.0>-<442.0,782.0>>/B<<442.0,782.0>-<431.0,815.0>-<430.0,864.0>> = 12.765565781058578
	* uaddakaltguru: B<<544.0,694.0>-<493.0,694.0>-<467.0,730.0>>/B<<467.0,730.0>-<476.0,708.0>-<481.0,681.0>> = 13.588629297065909
	* uaddakguru: B<<305.0,853.0>-<399.0,853.0>-<442.0,782.0>>/B<<442.0,782.0>-<431.0,815.0>-<430.0,864.0>> = 12.765565781058578
	* uaddakguru: B<<544.0,694.0>-<493.0,694.0>-<467.0,730.0>>/B<<467.0,730.0>-<476.0,708.0>-<481.0,681.0>> = 13.588629297065909
	* unuktaaddakguru: B<<305.0,853.0>-<399.0,853.0>-<442.0,782.0>>/B<<442.0,782.0>-<431.0,815.0>-<430.0,864.0>> = 12.765565781058578
	* unuktaaddakguru: B<<544.0,694.0>-<493.0,694.0>-<467.0,730.0>>/B<<467.0,730.0>-<476.0,708.0>-<481.0,681.0>> = 13.588629297065909
	* uraaddakguru: B<<305.0,853.0>-<399.0,853.0>-<442.0,782.0>>/B<<442.0,782.0>-<431.0,815.0>-<430.0,864.0>> = 12.765565781058578
	* uraaddakguru: B<<544.0,694.0>-<493.0,694.0>-<467.0,730.0>>/B<<467.0,730.0>-<476.0,708.0>-<481.0,681.0>> = 13.588629297065909 and 4 more. [code: found-jaggy-segments]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_semi_vertical[0m
    [0;36;107mDo outlines contain any semi-vertical or semi-horizontal lines?[0m
    with NotoSansGurmukhi-CondensedExtraLight.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test detects line segments which are nearly, but not quite, exactly  [0m
    [0;30;107m  horizontal or vertical. Sometimes such lines are created by design, but   [0m
    [0;30;107m  often they are indicative of a design error.                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is disabled for italic styles, which often contain              [0m
    [0;30;107m  nearly-upright lines.                                                     [0m

    * [1;30;103mWARN[0m: The following glyphs have semi-vertical/semi-horizontal lines:
	* yapostformguru: L<<397.0,376.0>--<398.0,587.0>> and yapostformguru: L<<398.0,0.0>--<397.0,341.0>> [code: found-semi-vertical]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 3
    [1;30;103mWARN[0m: 6
    [0;36;107mINFO[0m: 4
    [0;34;107mSKIP[0m: 17
    [0;32;107mPASS[0m: 47


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

