Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/ots[0m
    [0;36;107mChecking with ots-sanitize.[0m
    with NotoSerifTelugu-Bold.ttf

    * [1;30;103mWARN[0m: ots-sanitize passed this file, however warnings were printed:

WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.



    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/whitespace_glyphnames[0m
    [0;36;107mFont has **proper** whitespace glyph names?[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This check enforces adherence to recommended whitespace (codepoints 0020  [0m
    [0;30;107m  and 00A0) glyph names according to the Adobe Glyph List.                  [0m

    * [1;91;107mFAIL[0m: Glyph 0x00A0 is called "uni00A0.telu": Change to "uni00A0" [code: non-compliant-00a0]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gdef_spacing_marks[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class)[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Glyphs in the GDEF mark glyph class should be non-spacing.                [0m
    [0;30;107m  Spacing glyphs in the GDEF mark glyph class may have incorrect anchor     [0m
    [0;30;107m  positioning that was only intended for building composite glyphs during   [0m
    [0;30;107m  design.                                                                   [0m

    * [1;30;103mWARN[0m: The following spacing glyphs may be in the GDEF mark glyph class by mistake:
	 aavowelsigntelu, auvowelsigntelu, basubscript1telu, basubscripttelu, bhasubscript1telu, bhasubscripttelu, casubscript1telu, casubscripttelu, chasubscript1telu, chasubscripttelu and 60 more. [code: spacing-mark-glyphs]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/gdef_mark_chars[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Mark characters should be in the GDEF mark glyph class.                   [0m

    * [1;30;103mWARN[0m: The following mark characters could be in the GDEF mark glyph class:
	 U+0C01, U+0C02, U+0C03 and U+0C4D [code: mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_alignment_miss[0m
    [0;36;107mAre there any misaligned on-curve points?[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically looks for on-curve points which are close to, but [0m
    [0;30;107m  do not sit on, significant boundary coordinates. For example, a point     [0m
    [0;30;107m  which has a Y-coordinate of 1 or -1 might be a misplaced baseline point.  [0m
    [0;30;107m  As well as the baseline, the test also checks for points near the         [0m
    [0;30;107m  x-height (but only for lower case Latin letters), cap-height, ascender    [0m
    [0;30;107m  and descender Y coordinates.                                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Not all such misaligned curve points are a mistake, and sometimes the     [0m
    [0;30;107m  design may call for points in locations near the boundaries. As this test [0m
    [0;30;107m  is liable to generate significant numbers of false positives, the test    [0m
    [0;30;107m  will pass if there are more than 100 reported misalignments.              [0m

    * [1;30;103mWARN[0m: The following glyphs have on-curve points which have potentially incorrect y coordinates:
	* itelu: X=596.0,Y=-2.0 (should be at baseline 0?)
	* autelu: X=677.0,Y=621.0 (should be at cap-height 620?)
	* nyatelu: X=596.0,Y=-2.0 (should be at baseline 0?)
	* auvowelsigntelu: X=217.5,Y=621.0 (should be at cap-height 620?)
	* threetelu: X=135.0,Y=1.5 (should be at baseline 0?)
	* kassatelu: X=460.0,Y=1.0 (should be at baseline 0?)
	* nyahalanttelu: X=596.0,Y=-2.0 (should be at baseline 0?)
	* kassahalanttelu: X=460.0,Y=1.0 (should be at baseline 0?)
	* nyaavoweltelu: X=596.0,Y=-2.0 (should be at baseline 0?)
	* kassaavoweltelu: X=460.0,Y=1.0 (should be at baseline 0?) and 81 more. [code: found-misalignments]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_colinear_vectors[0m
    [0;36;107mDo any segments have colinear vectors?[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test looks for consecutive line segments which have the same angle.  [0m
    [0;30;107m  This normally happens if an outline point has been added by accident.     [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is not run for variable fonts, as they may legitimately have    [0m
    [0;30;107m  colinear vectors.                                                         [0m

    * [1;30;103mWARN[0m: The following glyphs have colinear vectors:
	* daivoweltelu: L<<342.0,506.0>--<342.0,506.0>> -> L<<342.0,506.0>--<438.0,506.0>>
	* ddaivoweltelu: L<<369.0,506.0>--<369.0,506.0>> -> L<<369.0,506.0>--<465.0,506.0>>
	* ddeevoweltelu: L<<369.0,506.0>--<369.0,506.0>> -> L<<369.0,506.0>--<465.0,506.0>>
	* ddevoweltelu: L<<369.0,506.0>--<369.0,506.0>> -> L<<369.0,506.0>--<465.0,506.0>>
	* ddhaivoweltelu: L<<369.0,506.0>--<369.0,506.0>> -> L<<369.0,506.0>--<465.0,506.0>>
	* ddheevoweltelu: L<<369.0,506.0>--<369.0,506.0>> -> L<<369.0,506.0>--<465.0,506.0>>
	* ddhevoweltelu: L<<369.0,506.0>--<369.0,506.0>> -> L<<369.0,506.0>--<465.0,506.0>>
	* ddhoovoweltelu: L<<299.0,506.0>--<353.0,506.0>> -> L<<353.0,506.0>--<353.0,506.0>>
	* ddhovoweltelu: L<<299.0,506.0>--<353.0,506.0>> -> L<<353.0,506.0>--<353.0,506.0>>
	* ddoovoweltelu: L<<299.0,506.0>--<353.0,506.0>> -> L<<353.0,506.0>--<353.0,506.0>> and 60 more. [code: found-colinear-vectors]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_jaggy_segments[0m
    [0;36;107mDo outlines contain any jaggy segments?[0m
    with NotoSerifTelugu-Bold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically detects outline segments which form a             [0m
    [0;30;107m  particularly small angle, indicative of an outline error. This may cause  [0m
    [0;30;107m  false positives in cases such as extreme ink traps, so should be regarded [0m
    [0;30;107m  as advisory and backed up by manual inspection.                           [0m

    * [1;30;103mWARN[0m: The following glyphs have jaggy segments:
	* ddailengthmarktelu: B<<-59.0,-91.0>-<-49.0,-91.0>-<-40.0,-93.0>>/B<<-40.0,-93.0>-<-71.0,-80.0>-<-103.5,-75.0>> = 10.222168633636073
	* ddasubscript1telu: B<<363.0,-202.0>-<379.0,-202.0>-<393.0,-206.0>>/B<<393.0,-206.0>-<359.0,-188.0>-<324.0,-180.5>> = 11.951875130024765
	* ddasubscriptlowtelu: B<<-137.0,-202.0>-<-121.0,-202.0>-<-107.0,-206.0>>/B<<-107.0,-206.0>-<-141.0,-188.0>-<-176.0,-180.5>> = 11.951875130024765
	* ddasubscripttelu: B<<-137.0,-137.0>-<-121.0,-137.0>-<-107.0,-141.0>>/B<<-107.0,-141.0>-<-141.0,-123.0>-<-176.0,-115.5>> = 11.951875130024765
	* ddhasubscript1telu: B<<362.0,-137.0>-<378.0,-137.0>-<392.0,-141.0>>/B<<392.0,-141.0>-<358.0,-123.0>-<323.0,-115.5>> = 11.951875130024765
	* ddhasubscripttelu: B<<-137.0,-137.0>-<-121.0,-137.0>-<-107.0,-141.0>>/B<<-107.0,-141.0>-<-141.0,-123.0>-<-176.0,-115.5>> = 11.951875130024765
	* nnaavoweltelu: B<<343.5,448.0>-<323.0,449.0>-<300.0,451.0>>/B<<300.0,451.0>-<358.0,434.0>-<396.0,389.0>> = 11.366302161608125
	* nnaavoweltelu: B<<396.0,389.0>-<439.0,436.0>-<500.0,450.0>>/B<<500.0,450.0>-<451.0,447.0>-<412.0,447.0>> = 9.422467479921465
	* nnasubscript1telu: B<<474.0,-344.0>-<474.0,-351.0>-<472.0,-360.0>>/B<<472.0,-360.0>-<479.0,-346.0>-<481.5,-330.5>> = 14.036243467926457
	* nnasubscripttelu: B<<-90.0,-279.0>-<-90.0,-286.0>-<-92.0,-295.0>>/B<<-92.0,-295.0>-<-85.0,-281.0>-<-82.5,-265.5>> = 14.036243467926457 and 5 more. [code: found-jaggy-segments]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 2
    [1;30;103mWARN[0m: 6
    [0;36;107mINFO[0m: 2
    [0;34;107mSKIP[0m: 16
    [0;32;107mPASS[0m: 51


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

