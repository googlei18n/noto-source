Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoSerifTibetan-Black.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoSerifTibetan-Black.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoSerifTibetan-Black.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gdef_mark_chars[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class[0m
    with NotoSerifTibetan-Black.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Mark characters should be in the GDEF mark glyph class.                   [0m

    * [1;30;103mWARN[0m: The following mark characters could be in the GDEF mark glyph class:
	 U+0F3E, U+0F3F and U+0F7F [code: mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_colinear_vectors[0m
    [0;36;107mDo any segments have colinear vectors?[0m
    with NotoSerifTibetan-Black.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test looks for consecutive line segments which have the same angle.  [0m
    [0;30;107m  This normally happens if an outline point has been added by accident.     [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is not run for variable fonts, as they may legitimately have    [0m
    [0;30;107m  colinear vectors.                                                         [0m

    * [1;30;103mWARN[0m: The following glyphs have colinear vectors:
	* uni0F4E0FA10FB1: L<<713.0,-364.0>--<713.0,-364.0>> -> L<<713.0,-364.0>--<713.0,-364.0>>
	* uni0F510FA10FB1: L<<582.0,-322.0>--<582.0,-322.0>> -> L<<582.0,-322.0>--<582.0,-322.0>>
	* uni0F660F900FB10F74: L<<546.0,-121.0>--<546.0,-121.0>> -> L<<546.0,-121.0>--<547.0,-121.0>>
	* uni0F660F990F74: L<<379.0,-269.0>--<379.0,-269.0>> -> L<<379.0,-269.0>--<379.0,-269.0>>
	* uni0F660F9F0FB20FB1: L<<553.0,-367.0>--<553.0,-367.0>> -> L<<553.0,-367.0>--<553.0,-367.0>>
	* uni0F660FA40FB10F74: L<<546.0,-88.0>--<546.0,-88.0>> -> L<<546.0,-88.0>--<546.0,-88.0>>
	* uni0F660FA40FB10F74: L<<546.0,-88.0>--<546.0,-88.0>> -> L<<546.0,-88.0>--<547.0,-88.0>>
	* uni0F660FA60FB10F74: L<<546.0,-88.0>--<546.0,-88.0>> -> L<<546.0,-88.0>--<547.0,-88.0>>
	* uni0F970F74.3: L<<488.0,-89.0>--<488.0,-89.0>> -> L<<488.0,-89.0>--<489.0,-89.0>>
	* uni0FB30F74.3: L<<578.0,-13.0>--<578.0,-3.0>> -> L<<578.0,-3.0>--<578.0,2.0>>
	* uni0FB30FB1.3: L<<578.0,-14.0>--<578.0,-3.0>> -> L<<578.0,-3.0>--<578.0,2.0>> and uni0FB30FB2.3: L<<578.0,-133.0>--<578.0,-3.0>> -> L<<578.0,-3.0>--<578.0,2.0>> [code: found-colinear-vectors]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_jaggy_segments[0m
    [0;36;107mDo outlines contain any jaggy segments?[0m
    with NotoSerifTibetan-Black.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically detects outline segments which form a             [0m
    [0;30;107m  particularly small angle, indicative of an outline error. This may cause  [0m
    [0;30;107m  false positives in cases such as extreme ink traps, so should be regarded [0m
    [0;30;107m  as advisory and backed up by manual inspection.                           [0m

    * [1;30;103mWARN[0m: The following glyphs have jaggy segments:
	* uni0F17: B<<109.5,262.5>-<115.0,241.0>-<124.0,219.0>>/B<<124.0,219.0>-<121.0,234.0>-<120.0,249.5>> = 10.939091183192101
	* uni0F400FB20F74: L<<592.0,-189.0>--<596.0,-189.0>>/L<<596.0,-189.0>--<591.0,-188.0>> = 11.309932474020195
	* uni0F400FB30F71: L<<449.0,-240.0>--<595.0,-240.0>>/L<<595.0,-240.0>--<591.0,-239.0>> = 14.036243467926484
	* uni0F410FB20F74: L<<590.0,-111.0>--<594.0,-111.0>>/L<<594.0,-111.0>--<589.0,-110.0>> = 11.309932474020195
	* uni0F420FA70F71: L<<219.0,-54.0>--<626.0,-54.0>>/L<<626.0,-54.0>--<615.0,-52.0>> = 10.304846468766044
	* uni0F420FA80F71: L<<474.0,-306.0>--<621.0,-306.0>>/L<<621.0,-306.0>--<616.0,-305.0>> = 11.309932474020195
	* uni0F420FB20F74: L<<616.0,-189.0>--<620.0,-189.0>>/L<<620.0,-189.0>--<615.0,-188.0>> = 11.309932474020195
	* uni0F420FB30F71: L<<474.0,-240.0>--<620.0,-240.0>>/L<<620.0,-240.0>--<616.0,-239.0>> = 14.036243467926484
	* uni0F4F0F900FB20F71: L<<356.0,-292.0>--<499.0,-292.0>>/B<<499.0,-292.0>-<427.0,-277.0>-<372.0,-268.5>> = 11.768288932020628
	* uni0F4F0FA40F710F74: L<<383.0,-104.0>--<504.0,-104.0>>/L<<504.0,-104.0>--<499.0,-103.0>> = 11.309932474020195 and 84 more. [code: found-jaggy-segments]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_semi_vertical[0m
    [0;36;107mDo outlines contain any semi-vertical or semi-horizontal lines?[0m
    with NotoSerifTibetan-Black.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test detects line segments which are nearly, but not quite, exactly  [0m
    [0;30;107m  horizontal or vertical. Sometimes such lines are created by design, but   [0m
    [0;30;107m  often they are indicative of a design error.                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is disabled for italic styles, which often contain              [0m
    [0;30;107m  nearly-upright lines.                                                     [0m

    * [1;30;103mWARN[0m: The following glyphs have semi-vertical/semi-horizontal lines:
	* uni0F400F9F0FAD: L<<543.0,-576.0>--<425.0,-577.0>>
	* uni0F490FAD: L<<446.0,-496.0>--<328.0,-497.0>>
	* uni0F4A0FAD0F71: L<<303.0,-297.0>--<185.0,-296.0>>
	* uni0F4A0FAD: L<<303.0,-497.0>--<185.0,-496.0>>
	* uni0F4F0F9F0FAD: L<<514.0,-604.0>--<396.0,-605.0>>
	* uni0F4F0FAD0F71: L<<495.0,-296.0>--<377.0,-297.0>>
	* uni0F4F0FAD: L<<495.0,-496.0>--<377.0,-497.0>>
	* uni0F620F990FAD: L<<523.0,-638.0>--<405.0,-639.0>>
	* uni0F660F990FAD: L<<550.0,-613.0>--<432.0,-614.0>>
	* uni0F660F9F0FAD: L<<502.0,-595.0>--<384.0,-596.0>> and 6 more. [code: found-semi-vertical]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 1
    [1;30;103mWARN[0m: 4
    [0;36;107mINFO[0m: 2
    [0;34;107mSKIP[0m: 18
    [0;32;107mPASS[0m: 52


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

