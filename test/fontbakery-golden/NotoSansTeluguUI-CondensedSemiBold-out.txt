Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/ots[0m
    [0;36;107mChecking with ots-sanitize.[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    * [1;30;103mWARN[0m: ots-sanitize passed this file, however warnings were printed:

WARNING: Layout: tags aren't arranged alphabetically.
WARNING: Layout: tags aren't arranged alphabetically.



    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/whitespace_glyphnames[0m
    [0;36;107mFont has **proper** whitespace glyph names?[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This check enforces adherence to recommended whitespace (codepoints 0020  [0m
    [0;30;107m  and 00A0) glyph names according to the Adobe Glyph List.                  [0m

    * [1;91;107mFAIL[0m: Glyph 0x00A0 is called "uni00A0.telu": Change to "uni00A0" [code: non-compliant-00a0]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/xavgcharwidth[0m
    [0;36;107mCheck if OS/2 xAvgCharWidth is correct.[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    * [1;30;103mWARN[0m: OS/2 xAvgCharWidth is 675 but it should be 689 which corresponds to the average of the widths of all glyphs in the font.


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/family_naming_recommendations[0m
    [0;36;107mFont follows the family naming recommendations?[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    * [0;36;107mINFO[0m: Font does not follow some family naming recommendations:

| Field | Value | Recommendation |
|:----- |:----- |:-------------- |
| Family Name | Noto Sans Telugu UI Condensed SemiBold | exceeds max length (31) |
 [code: bad-entries]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gdef_spacing_marks[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class)[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Glyphs in the GDEF mark glyph class should be non-spacing.                [0m
    [0;30;107m  Spacing glyphs in the GDEF mark glyph class may have incorrect anchor     [0m
    [0;30;107m  positioning that was only intended for building composite glyphs during   [0m
    [0;30;107m  design.                                                                   [0m

    * [1;30;103mWARN[0m: The following spacing glyphs may be in the GDEF mark glyph class by mistake:
	 aavowelsigntelu, auvowelsigntelu, basubscript1UItelu, basubscriptUItelu, bhasubscript1UItelu, bhasubscriptUItelu, casubscript1UItelu, casubscripttelu, chasubscript1UItelu, chasubscriptUItelu and 73 more. [code: spacing-mark-glyphs]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/gdef_mark_chars[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Mark characters should be in the GDEF mark glyph class.                   [0m

    * [1;30;103mWARN[0m: The following mark characters could be in the GDEF mark glyph class:
	 U+0C01, U+0C02, U+0C03 and U+0C4D [code: mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_alignment_miss[0m
    [0;36;107mAre there any misaligned on-curve points?[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test heuristically looks for on-curve points which are close to, but [0m
    [0;30;107m  do not sit on, significant boundary coordinates. For example, a point     [0m
    [0;30;107m  which has a Y-coordinate of 1 or -1 might be a misplaced baseline point.  [0m
    [0;30;107m  As well as the baseline, the test also checks for points near the         [0m
    [0;30;107m  x-height (but only for lower case Latin letters), cap-height, ascender    [0m
    [0;30;107m  and descender Y coordinates.                                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Not all such misaligned curve points are a mistake, and sometimes the     [0m
    [0;30;107m  design may call for points in locations near the boundaries. As this test [0m
    [0;30;107m  is liable to generate significant numbers of false positives, the test    [0m
    [0;30;107m  will pass if there are more than 100 reported misalignments.              [0m

    * [1;30;103mWARN[0m: The following glyphs have on-curve points which have potentially incorrect y coordinates:
	* lvocalictelu: X=490.0,Y=1.0 (should be at baseline 0?)
	* lvocalictelu: X=490.0,Y=1.0 (should be at baseline 0?)
	* ssatelu: X=674.0,Y=1.0 (should be at baseline 0?)
	* llvocalictelu: X=490.0,Y=1.0 (should be at baseline 0?)
	* llvocalictelu: X=490.0,Y=1.0 (should be at baseline 0?)
	* sixtelu: X=64.0,Y=621.0 (should be at cap-height 620?)
	* seventelu: X=456.5,Y=621.0 (should be at cap-height 620?)
	* eighttelu: X=326.0,Y=621.0 (should be at cap-height 620?)
	* ssahalanttelu: X=674.0,Y=1.0 (should be at baseline 0?)
	* shivoweltelu: X=378.5,Y=621.5 (should be at cap-height 620?) and 85 more. [code: found-misalignments]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/outline_colinear_vectors[0m
    [0;36;107mDo any segments have colinear vectors?[0m
    with NotoSansTeluguUI-CondensedSemiBold.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This test looks for consecutive line segments which have the same angle.  [0m
    [0;30;107m  This normally happens if an outline point has been added by accident.     [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This test is not run for variable fonts, as they may legitimately have    [0m
    [0;30;107m  colinear vectors.                                                         [0m

    * [1;30;103mWARN[0m: The following glyphs have colinear vectors:
	* cauvoweltelu: L<<379.0,501.0>--<372.0,501.0>> -> L<<372.0,501.0>--<306.0,501.0>>
	* chauvoweltelu: L<<379.0,501.0>--<372.0,501.0>> -> L<<372.0,501.0>--<306.0,501.0>>
	* kassaivowelUItelu: L<<232.0,593.0>--<232.0,593.0>> -> L<<232.0,593.0>--<263.0,593.0>>
	* lllahalanttelu: L<<519.0,593.0>--<529.0,593.0>> -> L<<529.0,593.0>--<529.0,593.0>>
	* sixtelu: L<<280.0,713.0>--<280.0,713.0>> -> L<<280.0,713.0>--<281.0,713.0>>
	* tsahalanttelu: L<<492.0,572.0>--<497.0,572.0>> -> L<<497.0,572.0>--<497.0,572.0>>
	* tsahalanttelu: L<<497.0,572.0>--<497.0,572.0>> -> L<<497.0,572.0>--<497.0,572.0>>
	* tsoovoweltelu: L<<256.0,693.0>--<252.0,693.0>> -> L<<252.0,693.0>--<11.0,693.0>>
	* tsovoweltelu: L<<256.0,693.0>--<252.0,693.0>> -> L<<252.0,693.0>--<11.0,693.0>>
	* ttaalttelu: L<<405.0,536.0>--<449.0,566.0>> -> L<<449.0,566.0>--<502.0,596.0>> and 4 more. [code: found-colinear-vectors]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 2
    [1;30;103mWARN[0m: 6
    [0;36;107mINFO[0m: 3
    [0;34;107mSKIP[0m: 17
    [0;32;107mPASS[0m: 49


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

