Start ... running 77 individual check executions.
 >> [1;35;107mcom.google.fonts/check/unicode_range_bits[0m
    [0;36;107mEnsure UnicodeRange bits are properly set.[0m
    with NotoSansNewa-Regular-VF.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  When the UnicodeRange bits on the OS/2 table are not properly set, some   [0m
    [0;30;107m  programs running on Windows may not recognize the font and use a system   [0m
    [0;30;107m  fallback font instead. For that reason, this check calculates the proper  [0m
    [0;30;107m  settings by inspecting the glyphs declared on the cmap table and then     [0m
    [0;30;107m  ensures that their corresponding ranges are enabled.                      [0m

    * [1;30;103mWARN[0m: UnicodeRange bit 57 "Non-Plane 0 *" should be 0 because cmap has none of the 2048 codepoints in this range. [code: bad-range-bit]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/whitespace_glyphnames[0m
    [0;36;107mFont has **proper** whitespace glyph names?[0m
    with NotoSansNewa-Regular-VF.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This check enforces adherence to recommended whitespace (codepoints 0020  [0m
    [0;30;107m  and 00A0) glyph names according to the Adobe Glyph List.                  [0m

    * [1;30;103mWARN[0m: Glyph 0x00A0 is called "nbspace": Change to "uni00A0" [code: not-recommended-00a0]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/required_tables[0m
    [0;36;107mFont contains all required tables?[0m
    with NotoSansNewa-Regular-VF.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Depending on the typeface and coverage of a font, certain tables are      [0m
    [0;30;107m  recommended for optimum quality. For example, the performance of a        [0m
    [0;30;107m  non-linear font is improved if the VDMX, LTSH, and hdmx tables are        [0m
    [0;30;107m  present. Non-monospaced Latin fonts should have a kern table. A gasp      [0m
    [0;30;107m  table is necessary if a designer wants to influence the sizes at which    [0m
    [0;30;107m  grayscaling is used under Windows. A DSIG table containing a digital      [0m
    [0;30;107m  signature helps ensure the integrity of the font file. Etc.               [0m

    * [0;36;107mINFO[0m: This font contains the following optional tables [loca, GPOS, GSUB]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/superfamily/list[0m
    [0;36;107mList all superfamily filepaths[0m
    with NotoSansNewa-Regular-VF.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  This is a merely informative check that lists all sibling families        [0m
    [0;30;107m  detected by fontbakery.                                                   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Only the fontfiles in these directories will be considered in             [0m
    [0;30;107m  superfamily-level checks.                                                 [0m

    * [0;36;107mINFO[0m: . [code: family-path]


    Result: [0;36;107mINFO[0m

 >> [1;35;107mcom.google.fonts/check/monospace[0m
    [0;36;107mChecking correctness of monospaced metadata.[0m
    with NotoSansNewa-Regular-VF.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  There are various metadata in the OpenType spec to specify if a font is   [0m
    [0;30;107m  monospaced or not. If the font is not truly monospaced, then no           [0m
    [0;30;107m  monospaced metadata should be set (as sometimes they mistakenly are...)   [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Requirements for monospace fonts:                                         [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  * post.isFixedPitch - "Set to 0 if the font is proportionally spaced,     [0m
    [0;30;107m  non-zero if the font is not proportionally spaced (monospaced)"           [0m
    [0;30;107m    www.microsoft.com/typography/otspec/post.htm                            [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  * hhea.advanceWidthMax must be correct, meaning no glyph's width value is [0m
    [0;30;107m  greater.                                                                  [0m
    [0;30;107m    www.microsoft.com/typography/otspec/hhea.htm                            [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  * OS/2.panose.bProportion must be set to 9 (monospace). Spec says: "The   [0m
    [0;30;107m  PANOSE definition contains ten digits each of which currently describes   [0m
    [0;30;107m  up to sixteen variations. Windows uses bFamilyType, bSerifStyle and       [0m
    [0;30;107m  bProportion in the font mapper to determine family type. It also uses     [0m
    [0;30;107m  bProportion to determine if the font is monospaced."                      [0m
    [0;30;107m    www.microsoft.com/typography/otspec/os2.htm#pan                         [0m
    [0;30;107m    monotypecom-test.monotype.de/services/pan2                              [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  * OS/2.xAvgCharWidth must be set accurately.                              [0m
    [0;30;107m    "OS/2.xAvgCharWidth is used when rendering monospaced fonts, at least   [0m
    [0;30;107m  by Windows GDI"                                                           [0m
    [0;30;107m    http://typedrawers.com/discussion/comment/15397/#Comment_15397          [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Also we should report an error for glyphs not of average width.           [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Please also note:                                                         [0m
    [0;30;107m  Thomas Phinney told us that a few years ago (as of December 2019), if you [0m
    [0;30;107m  gave a font a monospace flag in Panose, Microsoft Word would ignore the   [0m
    [0;30;107m  actual advance widths and treat it as monospaced. Source:                 [0m
    [0;30;107m  https://typedrawers.com/discussion/comment/45140/#Comment_45140           [0m

    * [1;91;107mFAIL[0m: On monospaced fonts, the value of post.isFixedPitch must be set to a non-zero value (meaning 'fixed width monospaced'), but got 0 instead. [code: mono-bad-post-isFixedPitch]
    * [1;91;107mFAIL[0m: On monospaced fonts, the value of OS/2.panose.bProportion must be set to 9 (proportion: monospaced), but got 0 instead. [code: mono-bad-panose-proportion]
    * [1;30;103mWARN[0m: Font is monospaced but 482 glyphs (78.50%) have a different width. You should check the widths of: ['CR', 'space', 'uni25CC', 'A_iv', 'AA_iv', 'I_iv', 'II_iv', 'U_iv', 'UU_iv', 'R_iv', 'Rr_iv', 'L_iv', 'LL_iv', 'E_iv', 'AI_iv', 'O_iv', 'AU_iv', 'Ka', 'Kha', 'Ga', 'Gha', 'Nga', 'Ngha', 'Ca', 'Cha', 'Ja', 'Jha', 'Nya', 'Nyha', 'Tta', 'Ttha', 'Dda', 'Ddha', 'Nna', 'Ta', 'Tha', 'Da', 'Dha', 'Na', 'Nha', 'Pa', 'Pha', 'Ba', 'Bha', 'Ma', 'Mha', 'Ya', 'Ra', 'Rha', 'La', 'Lha', 'Wa', 'Sha', 'Ssa', 'Sa', 'Ha', 'O_dv', 'AU_dv', 'Visarga', 'Avagraha', 'Finalanusvara', 'Om', 'Siddhi', 'Danda', 'Dbldanda', 'Comma', 'Gapfiller', 'Abbreviation', 'Zero_Newa', 'One_Newa', 'Two_Newa', 'Three_Newa', 'Four_Newa', 'Five_Newa', 'Six_Newa', 'Seven_Newa', 'Eight_Newa', 'Nine_Newa', 'Placeholder', 'Insertion', 'vedic_anusvara', 'periodcentered', 'Ka.nohd', 'Kha.nohd', 'Gha.nohd', 'Nga.nohd', 'Ngha.nohd', 'Ca.nohd', 'Cha.nohd', 'Ja.nohd', 'Jha.nohd', 'Nyha.nohd', 'Tta.nohd', 'Dda.nohd', 'Ddha.nohd', 'Ta.nohd', 'Da.nohd', 'Na.nohd', 'Nha.nohd', 'Pa.nohd', 'Pha.nohd', 'Ba.nohd', 'Bha.nohd', 'Bha.alt.nohd', 'Ma.nohd', 'Mha.nohd', 'Ya.nohd', 'Ra.nohd', 'Rha.nohd', 'La.nohd', 'Lha.nohd', 'Wa.nohd', 'Ssa.nohd', 'Sa.nohd', 'Ha.nohd', 'Ha.alt.nohd', 'AA_dv.alt', 'AA_dv.alt2', 'AA_dv.nya', 'AA_dv.ttha', 'E_dv.alt', 'AI_dv.alt', 'O_dv.alt', 'AU_dv.alt', 'Ha_Nga', 'Ha_Nya', 'Ha_Nna', 'Ha_Na', 'Ha_Ma', 'Ha_Ra', 'Ha_La', 'Bha.alt', 'Ha.alt', 'Ju', 'Juu', 'Ru', 'Ruu', 'Ka.icd', 'Kha.icd', 'Kha.cd', 'Kha.half', 'Ga.icd', 'Ga.half', 'Gha.icd', 'Gha.cd', 'Gha.half', 'Nga.icd', 'Nga.icd.rt', 'Nga.icd.nohd.rt', 'Ca.icd', 'Ca.half', 'Cha.icd', 'Ja.icd', 'Jha.icd', 'Jha.cd', 'Jha.half', 'Nya.icd', 'Nya_nostem.icd', 'Tta.icd', 'Tta.icd.rt', 'Tta.icd.nohd.rt', 'Ttha.icd', 'Ttha.icd.rt', 'Ttha.icd.center', 'Dda.icd', 'Dda.icd.rt', 'Dda.icd.nohd.rt', 'Ddha.icd', 'Ddha.icd.rt', 'Ddha.icd.nohd.rt', 'Nna.icd', 'Nna.half', 'Ta.icd', 'Ta.half', 'Ta.post', 'Tha.icd', 'Tha.half', 'Da.icd', 'Da.icd.rt', 'Da.icd.nohd.rt', 'Dha.icd', 'Dha.half', 'Na.icd', 'Na.half', 'Pa.icd', 'Pa.cd', 'Pa.half', 'Pha.icd', 'Ba.icd', 'Ba.half', 'Bha.icd', 'Bha.half', 'Ma.icd', 'Ma.cd', 'Ma.half', 'Ya.icd', 'Ya.cd', 'Ya.half', 'Ra.icd', 'Ra.half', 'La.icd', 'La.half', 'Va.icd', 'Va.half', 'Sha.icd', 'Sha.half', 'Ssa.icd', 'Ssa.cd', 'Ssa.half', 'Sa.icd', 'Sa.cd', 'Sa.half', 'Ha.icd', 'Ka_Ssa', 'Ja_Nya', 'Ka_Nya', 'Ka_Ssa.nohd', 'Ja_Nya.nohd', 'Ka_Nya.nohd', 'Kha.diag', 'Gha.diag', 'Jha.diag', 'Pa.diag', 'Ma.diag', 'Ya.diag', 'Ssa.diag', 'Sa.diag', 'Ka.icd.alt', 'Ja.icd.alt', 'Ha.icd.alt', 'Ka.icd.wide', 'Ja.icd.wide', 'O_dv.sm', 'O_dv.md', 'O_dv.md.tall', 'O_dv.lg', 'O_dv.xlg', 'O_dv.xxlg', 'O_dv.tall', 'O_dv.xlg.tall', 'AU_dv.tall', 'AU_dv.sm', 'AU_dv.md', 'AU_dv.md.tall', 'AU_dv.lg', 'AU_dv.xlg', 'AU_dv.xxlg', 'AU_dv.xlg.tall', 'AU_dv_part.ttha', 'AU_dv_part.alt', 'AU_dv_part.alt2', 'AU_dv_part.alt3', 'NyGha', 'NyJha', 'NyKha', 'NyMa', 'NyPa', 'NySa', 'NySsa', 'NyYa', 'Gi', 'Shi', 'Ka.icd.nohd', 'Kha.icd.nohd', 'Gha.icd.nohd', 'Nga.icd.nohd', 'Ca.icd.nohd', 'Cha.icd.nohd', 'Ja.icd.nohd', 'Jha.icd.nohd', 'Tta.icd.nohd', 'Dda.icd.nohd', 'Ddha.icd.nohd', 'Ta.icd.nohd', 'Da.icd.nohd', 'Na.icd.nohd', 'Pa.icd.nohd', 'Pha.icd.nohd', 'Bha.icd.nohd', 'Ba.icd.nohd', 'Ma.icd.nohd', 'Ya.icd.nohd', 'Ra.icd.nohd', 'La.icd.nohd', 'Va.icd.nohd', 'Ssa.icd.nohd', 'Sa.icd.nohd', 'Ha.icd.nohd', 'Ka.icd.alt.nohd', 'Ja.icd.alt.nohd', 'Ha.icd.alt.nohd', 'Ka.icd.wide.nohd', 'Ja.icd.wide.nohd', 'Kha.cd.nohd', 'Gha.cd.nohd', 'Jha.cd.nohd', 'Pa.cd.nohd', 'Ma.cd.nohd', 'Ya.cd.nohd', 'Ssa.cd.nohd', 'Sa.cd.nohd', 'Ha_Nga.nohd', 'Ha_Nya.nohd', 'Ha_Nna.nohd', 'Ha_Na.nohd', 'Ha_Ma.nohd', 'Ha_Ra.nohd', 'Ha_La.nohd', 'Ju.nohd', 'Juu.nohd', 'Ru.nohd', 'Ruu.nohd', 'nbspace', 'Ha_Ta', 'Ha_Kha', 'Ha_Ta.nohd', 'Ha_Kha.nohd', 'Gi.icd', 'Shi.icd', 'Nga_Ta', 'Tta_Ta', 'Ddha_Ta', 'Da_Ta', 'Pha_Ta', 'Nya_Ta', 'Nga_Ta.nohd', 'Tta_Ta.nohd', 'Ddha_Ta.nohd', 'Da_Ta.nohd', 'Pha_Ta.nohd', 'Da_Nna', 'Da_Nna.nohd', 'Ta.post.head', 'AA_dv.alt5', 'AA_dv.alt6', 'AA_dv.alt3ga', 'AU_dv_part.alt5', 'AU_dv_part.alt6', 'AU_dv_part.alt2_anusvara', 'AU_dv_part.alt2_candra', 'AU_dv_part.alt3_anusvara', 'AU_dv_part.alt3_candra', 'AU_dv_part.alt5_anusvara', 'AU_dv_part.alt5_candra', 'AU_dv_part.alt6_anusvara', 'AU_dv_part.alt6_candra', 'AU_dv_part.alt_anusvara', 'AU_dv_part.alt_candra', 'AU_dv_part.ttha_anusvara', 'AU_dv_part.ttha_candra', 'Nga.icd.shim', 'Dda.icd.shim', 'Ddha.icd.shim', 'Cha.icd.shim', 'Tta.icd.shim', 'Pha.icd.shim', 'Ja.icd.shim', 'Pha.icd.shim.sm', 'Ba.icd.shim.sm', 'Pa.icd.shim.sm', 'Ya.icd.shim.sm', 'Cha_Ta', 'Cha_Ta.nohd', 'Gphra', 'Gtya', 'Ha_Gha', 'Ha_Gha.nohd', 'Ha_Jha', 'Ha_Jha.nohd', 'Ha_Pa', 'Ha_Pa.nohd', 'Ha_Sa', 'Ha_Sa.nohd', 'Ha_Ssa', 'Ha_Ssa.nohd', 'Ha_Ya', 'Ha_Ya.nohd', 'JaKha', 'JaKha.nohd', 'Kssya', 'Kssya.nohd', 'Khtya', 'Khtya.nohd', 'Lhva', 'Lhva.nohd', 'Lhya', 'Lhya.nohd', 'Mhva', 'Mhva.nohd', 'Mhya', 'Mhya.nohd', 'Mpya', 'Mpya.nohd', 'Ndhva', 'Ndhya', 'Ndra', 'Ndra.nohd', 'Nhva', 'Nhva.nohd', 'Nhya', 'Nhya.nohd', 'Nska', 'Nska.nohd', 'Nsta', 'Nsta.nohd', 'Nstta', 'Nstta.nohd', 'Ntra', 'Ntra.nohd', 'Ntya', 'Ntya.nohd', 'Nyjya', 'PhaGha', 'PhaJha', 'PhaKha', 'PhaMa', 'PhaPa', 'PhaPha', 'PhaNna', 'PhaSa', 'PhaSsa', 'PhaYa', 'PhaGha.nohd', 'PhaJha.nohd', 'PhaKha.nohd', 'PhaMa.nohd', 'PhaNna.nohd', 'PhaPa.nohd', 'PhaPha.nohd', 'PhaSa.nohd', 'PhaSsa.nohd', 'PhaYa.nohd', 'Rya', 'Rya.nohd', 'Ssttra', 'Ssttra.nohd', 'Sthya', 'Sthya.nohd', 'Trtra', 'Trtra.nohd', 'TaNna', 'TaNna.nohd', 'TthaTa', 'Bdha', 'Ndha', 'Vdha', 'DdaTa', 'Kkssa', 'Ksska', 'Kssma', 'Kssna', 'Kssnna', 'Kssra', 'Kssva', 'NaPha', 'Ngkssa', 'Nkssa', 'Pkssa', 'Tkssa', 'Ttkssa', 'Ngkhya', 'DdaTa.nohd', 'Kkssa.nohd', 'Ksska.nohd', 'Kssma.nohd', 'Kssna.nohd', 'Kssnna.nohd', 'Kssra.nohd', 'Kssva.nohd', 'NaPha.nohd', 'Ngkssa.nohd', 'Nkssa.nohd', 'Pkssa.nohd', 'Tkssa.nohd', 'Ttkssa.nohd', 'Ngkhya.nohd', 'O_dv.xxlg.tall', 'Jihvamuliya.sm', 'Upadhmaniya.sm', 'CommaDbl', 'Jihvamuliya', 'Upadhmaniya'] [code: mono-outliers]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/dsig[0m
    [0;36;107mDoes the font have a DSIG table?[0m
    with NotoSansNewa-Regular-VF.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Microsoft Office 2013 and below products expect fonts to have a digital   [0m
    [0;30;107m  signature declared in a DSIG table in order to implement OpenType         [0m
    [0;30;107m  features. The EOL date for Microsoft Office 2013 products is 4/11/2023.   [0m
    [0;30;107m  This issue does not impact Microsoft Office 2016 and above products.      [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  This checks verifies that this signature is available in the font.        [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  A fake signature is enough to address this issue. If needed, a dummy      [0m
    [0;30;107m  table can be added to the font with the `gftools fix-dsig` script         [0m
    [0;30;107m  available at https://github.com/googlefonts/gftools                       [0m
    [0;30;107m                                                                            [0m
    [0;30;107m  Reference: https://github.com/googlefonts/fontbakery/issues/1845          [0m

    * [1;91;107mFAIL[0m: This font lacks a digital signature (DSIG table). Some applications may require one (even if only a dummy placeholder) in order to work properly. You can add a DSIG table by running the `gftools fix-dsig` script. [code: lacks-signature]


    Result: [1;91;107mFAIL[0m

 >> [1;35;107mcom.google.fonts/check/gdef_mark_chars[0m
    [0;36;107mCheck mark characters are in GDEF mark glyph class[0m
    with NotoSansNewa-Regular-VF.ttf

    [1;35;107m  Rationale:                                                                [0m
    [0;30;107m  Mark characters should be in the GDEF mark glyph class.                   [0m

    * [1;30;103mWARN[0m: The following mark characters could be in the GDEF mark glyph class:
	 U+11435, U+11436, U+11437, U+11440, U+11441 and U+11445 [code: mark-chars]


    Result: [1;30;103mWARN[0m

 >> [1;35;107mcom.google.fonts/check/gpos_kerning_info[0m
    [0;36;107mDoes GPOS table have kerning information? This check skips monospaced fonts as defined by post.isFixedPitch value[0m
    with NotoSansNewa-Regular-VF.ttf

    * [1;30;103mWARN[0m: GPOS table lacks kerning information. [code: lacks-kern-info]


    Result: [1;30;103mWARN[0m


Total:

    [1;97;101mERROR[0m: 0
    [1;91;107mFAIL[0m: 2
    [1;30;103mWARN[0m: 4
    [0;36;107mINFO[0m: 2
    [0;34;107mSKIP[0m: 16
    [0;32;107mPASS[0m: 53


DONE!

    [1;30;107mMeaning of check results:[0m

    An [1;97;101mERROR[0m is something wrong with FontBakery itself, possibly a bug.
    A [1;91;107mFAIL[0m is a problem with the font that must be fixed.
    A [1;30;103mWARN[0m is something that you should consider addressing.
    An [0;36;107mINFO[0m result simply prints something useful. Typically stats.
    A [0;32;107mPASS[0m means the font looks good for the given checking routine.
    And a [0;34;107mSKIP[0m happens when the check does not apply to the given font.

    If you get [1;97;101mERROR[0ms, please help us improve the tool by reporting them at
    [1;36;107mhttps://github.com/googlefonts/fontbakery/issues[0m

    (but other kinds of bug reports and/or
     feature requests are also always welcome, of course!)

